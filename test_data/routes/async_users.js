// Generated by CoffeeScript 1.8.0
(function() {
  var Bluebird, MyBaseController, UserData, beforeEach, data, middleware, timeout;

  Bluebird = require('bluebird');

  MyBaseController = require('./');

  data = require('../data');

  middleware = data.middleware;

  beforeEach = data.beforeEach;

  UserData = data.UserData;

  timeout = function(time) {
    return new Bluebird(function(resolve) {
      return setTimeout(resolve, time);
    });
  };

  module.exports = MyBaseController.extend({
    name: "AsyncUser",
    beforeEach: [
      function() {
        return beforeEach.asyncRan++;
      }, function() {
        return beforeEach.asyncRan++;
      }
    ],
    middleware: function(req, res, next) {
      middleware.asyncRan++;
      return next();
    },
    routes: {
      query: {
        validation: {
          optional: {
            type: 'int',
            required: false,
            "default": 5
          }
        },
        logic: function(optional) {
          return timeout(25).then(function() {
            return UserData;
          });
        }
      },
      get: {
        validation: {
          id: {
            required: true,
            type: 'int',
            inDb: true
          }
        },
        logic: function(id) {
          return timeout(25).then(function() {
            return UserData[id];
          });
        }
      },
      add: {
        validation: {
          name: {
            required: true,
            len: 8
          },
          username: {
            required: true,
            type: 'alphanumeric',
            len: 8
          },
          password: {
            required: true,
            len: 8,
            type: 'alphanumeric',
            unique: true
          }
        },
        logic: function(_data) {
          return timeout(25).then(function() {
            _data.id = UserData.length;
            _data.comments = [];
            UserData.push(_data);
            return true;
          });
        }
      },
      save: {
        validation: {
          id: {
            required: true,
            type: 'int',
            inDb: true
          },
          name: {
            required: true,
            len: 8
          },
          username: {
            type: 'alphaNumeric',
            len: 8
          },
          password: {
            type: 'alphaNumeric',
            len: 8
          }
        },
        logic: function(id, _data) {
          return timeout(25).then(function() {
            var key, value;
            for (key in _data) {
              value = _data[key];
              UserData[id][key] = value;
            }
            return true;
          });
        }
      },
      postLogin: {
        validation: {
          username: {
            required: true
          },
          password: {
            required: true
          }
        },
        logic: function(username, password) {
          return timeout(25).then(function() {
            var user, _i, _len;
            for (_i = 0, _len = UserData.length; _i < _len; _i++) {
              user = UserData[_i];
              user = UserData[id];
              if (user.username === username) {
                if (user.password === password) {
                  return true;
                } else {
                  throw new UserError("Invalid username or password");
                }
              }
            }
            throw new UserError("Invalid username or password");
          });
        }
      },
      beforeEachCrazy: {
        before: function() {
          return beforeEach.other.crazy = true;
        },
        logic: function() {
          return true;
        }
      }
    }
  });

}).call(this);
