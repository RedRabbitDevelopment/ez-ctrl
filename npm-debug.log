0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'publish' ]
2 info using npm@1.3.21
3 info using node@v0.10.24
4 verbose node symlink /usr/bin/node
5 verbose publish [ '.' ]
6 verbose cache add [ '.', null ]
7 verbose cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: '.',
8 verbose parsed url   path: '.',
8 verbose parsed url   href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . /home/yourdeveloperfriend/.npm/3a52ce78-.lock
11 verbose tar pack [ '/home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/tmp.tgz',
11 verbose tar pack   '.' ]
12 verbose tarball /home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/tmp.tgz
13 verbose folder .
14 info prepublish ez-ctrl@0.3.12
15 silly lockFile 1f1177db-tar tar://.
16 verbose lock tar://. /home/yourdeveloperfriend/.npm/1f1177db-tar.lock
17 silly lockFile ca2a3a25-87503-0-2814465034753084-tmp-tgz tar:///home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/tmp.tgz
18 verbose lock tar:///home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/tmp.tgz /home/yourdeveloperfriend/.npm/ca2a3a25-87503-0-2814465034753084-tmp-tgz.lock
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 1f1177db-tar tar://.
21 silly lockFile ca2a3a25-87503-0-2814465034753084-tmp-tgz tar:///home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/tmp.tgz
22 silly lockFile ca2a3a25-87503-0-2814465034753084-tmp-tgz tar:///home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/tmp.tgz
23 verbose tar unpack /home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/tmp.tgz
24 silly lockFile 0afccc77-87503-0-2814465034753084-package tar:///home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/package
25 verbose lock tar:///home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/package /home/yourdeveloperfriend/.npm/0afccc77-87503-0-2814465034753084-package.lock
26 silly lockFile ca2a3a25-87503-0-2814465034753084-tmp-tgz tar:///home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/tmp.tgz
27 verbose lock tar:///home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/tmp.tgz /home/yourdeveloperfriend/.npm/ca2a3a25-87503-0-2814465034753084-tmp-tgz.lock
28 silly gunzTarPerm modes [ '755', '644' ]
29 silly gunzTarPerm extractEntry package.json
30 silly gunzTarPerm extractEntry .npmignore
31 silly gunzTarPerm extractEntry README.md
32 silly gunzTarPerm extractEntry LICENSE
33 silly gunzTarPerm extractEntry index.js
34 silly gunzTarPerm extractEntry index.coffee
35 silly gunzTarPerm extractEntry lib/ez-access/ez-access-angular.js
36 silly gunzTarPerm extractEntry lib/ez-access/ez-access.js
37 silly gunzTarPerm extractEntry lib/ez-access/frontend.js
38 silly gunzTarPerm extractEntry lib/ez-access/validator.js
39 silly gunzTarPerm extractEntry lib/ez-access/ez-access-angular.coffee
40 silly gunzTarPerm extractEntry lib/ez-access/ez-access.coffee
41 silly gunzTarPerm extractEntry lib/ez-access/frontend.coffee
42 silly gunzTarPerm extractEntry lib/ez-access/validator.coffee
43 silly gunzTarPerm extractEntry lib/ez-ctrl/base.js
44 silly gunzTarPerm extractEntry lib/ez-ctrl/converter.js
45 silly gunzTarPerm extractEntry lib/ez-ctrl/func-details.js
46 silly gunzTarPerm extractEntry lib/ez-ctrl/manager.js
47 silly gunzTarPerm extractEntry lib/ez-ctrl/userError.js
48 silly gunzTarPerm extractEntry lib/ez-ctrl/base.coffee
49 silly gunzTarPerm extractEntry lib/ez-ctrl/converter.coffee
50 silly gunzTarPerm extractEntry lib/ez-ctrl/func-details.coffee
51 silly gunzTarPerm extractEntry lib/ez-ctrl/manager.coffee
52 silly gunzTarPerm extractEntry lib/ez-ctrl/userError.coffee
53 silly gunzTarPerm extractEntry test/test_logic.js
54 silly gunzTarPerm extractEntry test/test_server.js
55 silly gunzTarPerm extractEntry test/test_testers.js
56 silly gunzTarPerm extractEntry test/test_validator.js
57 silly gunzTarPerm extractEntry test/test_logic.coffee
58 silly gunzTarPerm extractEntry test/test_server.coffee
59 silly gunzTarPerm extractEntry test/test_testers.coffee
60 silly gunzTarPerm extractEntry test/test_validator.coffee
61 silly gunzTarPerm extractEntry test_data/data.js
62 silly gunzTarPerm extractEntry test_data/run_server.js
63 silly gunzTarPerm extractEntry test_data/server.js
64 silly gunzTarPerm extractEntry test_data/data.coffee
65 silly gunzTarPerm extractEntry test_data/routes/async_users.js
66 silly gunzTarPerm extractEntry test_data/routes/index.js
67 silly gunzTarPerm extractEntry test_data/routes/users.js
68 silly gunzTarPerm extractEntry test_data/routes/async_users.coffee
69 silly gunzTarPerm extractEntry test_data/routes/index.coffee
70 silly gunzTarPerm extractEntry test_data/routes/users.coffee
71 silly gunzTarPerm extractEntry test_data/run_server.coffee
72 silly gunzTarPerm extractEntry test_data/server.coffee
73 silly gunzTarPerm extractEntry test_data/server_public/index.html
74 silly gunzTarPerm extractEntry test_data/server_public/js/lib/q.js
75 silly gunzTarPerm extractEntry test_data/server_public/js/lib/underscore-min.js
76 silly gunzTarPerm extractEntry test_data/server_public/js/lib/validator-min.js
77 silly lockFile 0afccc77-87503-0-2814465034753084-package tar:///home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/package
78 silly lockFile 0afccc77-87503-0-2814465034753084-package tar:///home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/package
79 silly lockFile ca2a3a25-87503-0-2814465034753084-tmp-tgz tar:///home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/tmp.tgz
80 silly lockFile ca2a3a25-87503-0-2814465034753084-tmp-tgz tar:///home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/tmp.tgz
81 verbose tar pack [ '/home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package.tgz',
81 verbose tar pack   '/home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/package' ]
82 verbose tarball /home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package.tgz
83 verbose folder /home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/package
84 silly lockFile 0afccc77-87503-0-2814465034753084-package tar:///home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/package
85 verbose lock tar:///home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/package /home/yourdeveloperfriend/.npm/0afccc77-87503-0-2814465034753084-package.lock
86 silly lockFile d832dc46-d-npm-ez-ctrl-0-3-12-package-tgz tar:///home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package.tgz
87 verbose lock tar:///home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package.tgz /home/yourdeveloperfriend/.npm/d832dc46-d-npm-ez-ctrl-0-3-12-package-tgz.lock
88 silly lockFile 0afccc77-87503-0-2814465034753084-package tar:///home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/package
89 silly lockFile 0afccc77-87503-0-2814465034753084-package tar:///home/yourdeveloperfriend/tmp/npm-969-3isUGspn/1391213787503-0.2814465034753084/package
90 silly lockFile d832dc46-d-npm-ez-ctrl-0-3-12-package-tgz tar:///home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package.tgz
91 silly lockFile d832dc46-d-npm-ez-ctrl-0-3-12-package-tgz tar:///home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package.tgz
92 silly lockFile dda9fd5e-riend-npm-ez-ctrl-0-3-12-package /home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package
93 verbose lock /home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package /home/yourdeveloperfriend/.npm/dda9fd5e-riend-npm-ez-ctrl-0-3-12-package.lock
94 silly lockFile dda9fd5e-riend-npm-ez-ctrl-0-3-12-package /home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package
95 silly lockFile dda9fd5e-riend-npm-ez-ctrl-0-3-12-package /home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package
96 verbose tar unpack /home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package.tgz
97 silly lockFile 04dd83b5-riend-npm-ez-ctrl-0-3-12-package tar:///home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package
98 verbose lock tar:///home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package /home/yourdeveloperfriend/.npm/04dd83b5-riend-npm-ez-ctrl-0-3-12-package.lock
99 silly lockFile d832dc46-d-npm-ez-ctrl-0-3-12-package-tgz tar:///home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package.tgz
100 verbose lock tar:///home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package.tgz /home/yourdeveloperfriend/.npm/d832dc46-d-npm-ez-ctrl-0-3-12-package-tgz.lock
101 silly gunzTarPerm modes [ '755', '644' ]
102 silly gunzTarPerm extractEntry package.json
103 silly gunzTarPerm extractEntry .npmignore
104 silly gunzTarPerm extractEntry README.md
105 silly gunzTarPerm extractEntry LICENSE
106 silly gunzTarPerm extractEntry index.js
107 silly gunzTarPerm extractEntry index.coffee
108 silly gunzTarPerm extractEntry lib/ez-access/ez-access-angular.js
109 silly gunzTarPerm extractEntry lib/ez-access/ez-access.js
110 silly gunzTarPerm extractEntry lib/ez-access/frontend.js
111 silly gunzTarPerm extractEntry lib/ez-access/validator.js
112 silly gunzTarPerm extractEntry lib/ez-access/ez-access-angular.coffee
113 silly gunzTarPerm extractEntry lib/ez-access/ez-access.coffee
114 silly gunzTarPerm extractEntry lib/ez-access/frontend.coffee
115 silly gunzTarPerm extractEntry lib/ez-access/validator.coffee
116 silly gunzTarPerm extractEntry lib/ez-ctrl/base.js
117 silly gunzTarPerm extractEntry lib/ez-ctrl/converter.js
118 silly gunzTarPerm extractEntry lib/ez-ctrl/func-details.js
119 silly gunzTarPerm extractEntry lib/ez-ctrl/manager.js
120 silly gunzTarPerm extractEntry lib/ez-ctrl/userError.js
121 silly gunzTarPerm extractEntry lib/ez-ctrl/base.coffee
122 silly gunzTarPerm extractEntry lib/ez-ctrl/converter.coffee
123 silly gunzTarPerm extractEntry lib/ez-ctrl/func-details.coffee
124 silly gunzTarPerm extractEntry lib/ez-ctrl/manager.coffee
125 silly gunzTarPerm extractEntry lib/ez-ctrl/userError.coffee
126 silly gunzTarPerm extractEntry test/test_logic.js
127 silly gunzTarPerm extractEntry test/test_server.js
128 silly gunzTarPerm extractEntry test/test_testers.js
129 silly gunzTarPerm extractEntry test/test_validator.js
130 silly gunzTarPerm extractEntry test/test_logic.coffee
131 silly gunzTarPerm extractEntry test/test_server.coffee
132 silly gunzTarPerm extractEntry test/test_testers.coffee
133 silly gunzTarPerm extractEntry test/test_validator.coffee
134 silly gunzTarPerm extractEntry test_data/data.js
135 silly gunzTarPerm extractEntry test_data/run_server.js
136 silly gunzTarPerm extractEntry test_data/server.js
137 silly gunzTarPerm extractEntry test_data/data.coffee
138 silly gunzTarPerm extractEntry test_data/routes/async_users.js
139 silly gunzTarPerm extractEntry test_data/routes/index.js
140 silly gunzTarPerm extractEntry test_data/routes/users.js
141 silly gunzTarPerm extractEntry test_data/routes/async_users.coffee
142 silly gunzTarPerm extractEntry test_data/routes/index.coffee
143 silly gunzTarPerm extractEntry test_data/routes/users.coffee
144 silly gunzTarPerm extractEntry test_data/run_server.coffee
145 silly gunzTarPerm extractEntry test_data/server.coffee
146 silly gunzTarPerm extractEntry test_data/server_public/index.html
147 silly gunzTarPerm extractEntry test_data/server_public/js/lib/q.js
148 silly gunzTarPerm extractEntry test_data/server_public/js/lib/underscore-min.js
149 silly gunzTarPerm extractEntry test_data/server_public/js/lib/validator-min.js
150 silly lockFile 04dd83b5-riend-npm-ez-ctrl-0-3-12-package tar:///home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package
151 silly lockFile 04dd83b5-riend-npm-ez-ctrl-0-3-12-package tar:///home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package
152 silly lockFile d832dc46-d-npm-ez-ctrl-0-3-12-package-tgz tar:///home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package.tgz
153 silly lockFile d832dc46-d-npm-ez-ctrl-0-3-12-package-tgz tar:///home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package.tgz
154 verbose chmod /home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package.tgz 644
155 verbose chown /home/yourdeveloperfriend/.npm/ez-ctrl/0.3.12/package.tgz [ 1000, 1000 ]
156 silly lockFile 3a52ce78- .
157 silly lockFile 3a52ce78- .
158 silly publish { name: 'ez-ctrl',
158 silly publish   version: '0.3.12',
158 silly publish   main: 'index.js',
158 silly publish   dependencies:
158 silly publish    { express: '~3.4.4',
158 silly publish      inflection: '~1.2.6',
158 silly publish      q: '~0.9.7',
158 silly publish      underscore: '~1.5.2',
158 silly publish      validator: '~2.0.0',
158 silly publish      multiparty: '~3.1.0',
158 silly publish      angular: '~1.2.7' },
158 silly publish   devDependencies: { assert: '~0.4.9' },
158 silly publish   scripts: { test: 'mocha' },
158 silly publish   repository:
158 silly publish    { type: 'git',
158 silly publish      url: 'github.com:RedRabbitDevelopment/ez-ctrl.git' },
158 silly publish   keywords: [ 'nodejs', 'javascript', 'node' ],
158 silly publish   author: { name: 'yourdeveloperfriend' },
158 silly publish   license: 'MIT',
158 silly publish   readmeFilename: 'README.md',
158 silly publish   bugs: { url: 'https://github.com/RedRabbitDevelopment/ez-ctrl/issues' },
158 silly publish   readme: 'EZController\n=======\n\n```js\n// ServerSide\nvar EZController = require(\'ez-ctrl\').BaseController;\nUserController = BaseController.extend({\n  name: "User",\n  routes: {\n    query: function() { // Anything with "query" automatically is get /users\n      // Return raw data which is translated into JSON\n      return UserData;\n    },\n    get: { // Anything with "get" automatically is get /users/:id\n      validation: {\n        id: {\n          required: true,\n          type: \'int\', // convert string inputs to integer\n          inDb: true // create custom validation\n        }\n      },\n      logic: function(id) {\n        // Note, id is already clean! No need to check if it exists!\n        // Return any promise\n        var deferred = Q.defer();\n        setTimeout(function() {\n          deferred.resolve(UserData[id]);\n        }, 25);\n        return deferred.promise;\n      }\n    },\n    add: { // Anything with "add" automatically is put /users\n      validation: {\n        name: {\n          required: true,\n          type: "text",\n          length: {\n            gt: 8\n          }\n        },\n        username: {\n          required: true,\n          type: \'alphaNumeric\',\n          unique: true,\n          length: {\n            gt: 9\n          }\n        },\n        password: {\n          required: true,\n          type: \'alphaNumeric\',\n          length: {\n            gt: 8\n          }\n        }\n      },\n      logic: function(data) {\n        data.id = UserData.length;\n        data.comments = []\n        UserData.push(data);\n        return true;\n      }\n    },\n    save: { // Anything with "save" automatically is post /users/:id\n      validation: {\n        id:  {\n          required: true,\n          type: \'int\', \n          inDb: true\n        },\n        name: {\n          length: {\n            gt: 8\n          }\n        },\n        username: {\n          type: \'alphaNumeric\',\n          unique: true,\n          length: {\n            gt: 8\n          }\n        },\n        password: {\n          type: \'alphaNumeric\',\n          length: {\n            gt: 8\n          }\n        }\n      },\n      logic: function(id, _data) {\n        // input can be (id, name, username, password) or (id, _data)\n        for(var key in _data) {\n          UserData[id][key] = _data[key];\n        }\n        return true;\n      }\n    },\n    postGetStuff: function() { // post<verb> is always /users/verb\n      return "Got Stuff";\n    },\n    login: {\n      method: "post",\n      validation: {\n        username: {\n          required: true,\n        },\n        password: {\n          required: true\n        }\n      },\n      logic: function(username, password) {\n        var user;\n        for(var id in UserData) {\n          user = UserData[id];\n          if(user.username == username) {\n            if(user.password == password) {\n              return true;\n            } else {\n              throw new Error("Invalid username or password"); // Throw errors\n            }\n          }\n        }\n        throw new Error("Invalid username or password");\n      }\n    },\n    action: { // any action is /users/action\n      validation: {\n        id: {\n          type: \'int\',\n          required: true,\n          inDb: true\n        }\n      },\n      logic: function() {\n        return "Result";\n      }\n    }\n    usesIdAction: { // any action with usesId is /users/:id/action\n      validation: {\n        id: {\n          type: \'int\',\n          required: true,\n          inDb: true\n        }\n      },\n      logic: function(id) {\n        return "Result";\n      }\n    }\n  }\n});\n\n// Client-side\n\nez.User.login(username, password).then(function(result) { // result is the result of the logic function\n  alert("Booya!");\n}).fail(function(reason) {\n  if(reason == "Invalid username or password") {\n    alert(reason);\n  } else if(reason.error === "validate") {\n    console.log(reason.errors);\n  }\n});\n\n```\n\n## Installation\n\n    $ npm install ez-ctrl\n\n## Features\n\n  * Built on [Express](https://raw.github.com/visionmedia/express)\n  * Has all the same features as express\n  * Decouples data retrieval, data validation, and logic for better testing\n  * DRY - focus more on logic and less on sanitation\n  * DRY - easily validate input on the front-end and back-end with one simply definition!\n\n## Philosophy\n\n  The EZController is not just a Ruby on Rails inspired application. The basic idea\n  is that generally your front-end application is ignorant of the server and just makes\n  guesses. The server already knows where it\'s endpoints are, and already runs validation\n  on the input, why not expose that information to the browser?\n  \n  We have created a way for the developers\n  to reuse the validation code on the front-end, essentially building \n  front-end and back-end validation at the same time.\n  \n## API\n\n### BaseController\n\n  Exposed by `require(\'ez-controller\').BaseController`.\n\n### ControllerManager.registerRoutes(app)\n  In order to allow your express server to route to your different logic methods, express needs to be aware of them.\n  \n    FrontEnd = require(\'ez-ctrl\').FrontEnd;\n    frontEnd = new FrontEnd()\n    frontEnd.addController(UserController);\n    frontEnd.registerRoutes(app);\n\n  Or, if you keep all your controllers in one directory, you can declare it like this:\n\n    frontEnd.registerRoutes(app, __dirname + "/routes");\n\n### BaseController.extend()\n\n  Creates a new `Controller`.\n  \n  options:\n  name: name of the controller. This will be prepended to the beginning of every route.\n  i.e.:\n  User: users\n  Tweet: tweets\n  UserComment: user_comments\n  \n  routes: all of the routes for that controller\n  \n  crud routes:\n  The following are crud routes that are made easier for you:\n    \n  query: gets /users\n  get: gets /users/:id\n  add: puts /users\n  save: posts /users/:id\n  delete: deletes /users/:id\n  \n  The default method can be overridden by adding a method parameter in the route:\n    \n    routes: {\n      query: {\n        method: "post",\n        logic: function() {\n          // Do stuff\n        }\n      }\n    }\n  \n### custom routes:\n  The http method is by default get, but you can change that by either adding a "method"\n  parameter or by throwing the method at the beginning of the route name:\n    \n    routes: {\n      postLogin: function() {\n        // Do stuff\n      }\n    }\n  \n  or\n  \n  \n      routes: {\n      login: {\n        method: "post",\n        logic: function() {\n          // Do stuff\n        }\n      }\n    }\n\n### validation:\n  You can validation to any method with the validation parameter:\n    \n    routes: {\n      postLogin: {\n        validation: {\n          username: {\n            required: true,\n          },\n          password: {\n            required: true\n          }\n        },\n        logic: function(username, password) {\n          // Do stuff\n        }\n      }\n    }\n  \n  The existing validation methods are:\n  required: must be present\n  float: must be a float\n  int: must be an integer\n  alphaNumeric: must be alpha-numeric\n  type: set type to float, int, or alpha-numeric\n  length: which includes it\'s own set of parameters:\n  length: {gt: 8},\n  length: {lt: 8},\n  length: {between: [8, 16]}\n  \n  Not that setting the type may also run it through a conversion:\n  type: \'int\' - convert to an integer\n  type: \'float\' - convert to an integer\n\n### Custom Validation\n  You can create custom validation methods by registering it:\n  \n    Validator = require(\'ez-ctrl\').Validator;\n    // Validator.registerValidator(validatorName, message, validator);\n    Validator.registerValidator("unique", function(validatorResult, validatorData) {\n      return validatorData ? "must be unique" : "must not be unique";  \n    }, function(value, data, field) {\n      var i, user, isUnique = true;\n      for(i = 0, _len = UserData.length; i < _len;i++) {\n        user = UserData[i];\n        if(user[field] == value) {\n          isUnique = false;\n        }\n      }\n      return isUnique == data;\n    });\n  \n    ...\n    routes: {\n      add: {\n        validation: {\n          username: {\n            unique: true // validatorName: validatorData\n          }\n        }\n        logic: function(username) {\n        \n        }\n      }\n    }\n  \n  \n  validatorName: name to use in the validation parameter\n  message: a message to send back when the validation fails. This can be a string or a function(validatorResult, validatorData) where\n    validatorResult: the result of the validation\n    validatorData: the data that was tagged onto the validation parameter\n  validator: a function(value, validatorData, field):\n    value: the value of the field\n    validatorData: the data that was tagged onto the validation parameter\n    field: the field name\n  \n### Custom Conversion\n  You can create custom converter by registering it:\n  \n    Converter = require(\'ez-ctrl\').Converter;\n    // Converter.registerConverter(converterName, converterFunction);\n    Converter.registerConverter("object", function(value) {\n      return JSON.parse(value);\n    });\n  \n    ...\n    routes: {\n      add: {\n        validation: {\n          username: {\n            type: \'object\'\n          }\n        }\n        logic: function(username) {\n        \n        }\n      }\n    }\n    \n  converterName: name to use in the type parameter\n  converter: a function(value):\n    value: the value to be converted\n\n### Front End Use\n  After defining the controllers on the back-end, the API can easily accessed through a frontend library.\n  Example:\n    // On the browser\n    User.login(username, password).then(function(result) {\n      // do stuff\n    }).fail(function(error) {\n      // do stuff\n    });\n  \n  Neat trick, the validation runs client side for quicker responses to errors! No more do you have to write validation code for both the client and\n  server sides.\n  \n## License\n\n(The MIT License)\n\nCopyright (c) 2009-2012 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
158 silly publish   description: 'EZController =======',
158 silly publish   homepage: 'https://github.com/RedRabbitDevelopment/ez-ctrl',
158 silly publish   _id: 'ez-ctrl@0.3.12',
158 silly publish   dist: { shasum: 'affb1d84cac1b0f5c0912c4b01d24a9606c5f648' },
158 silly publish   _from: '.' }
159 verbose url raw ez-ctrl
160 verbose url resolving [ 'https://registry.npmjs.org/', './ez-ctrl' ]
161 verbose url resolved https://registry.npmjs.org/ez-ctrl
162 info trying registry request attempt 1 at 17:16:28
163 http PUT https://registry.npmjs.org/ez-ctrl
164 http 409 https://registry.npmjs.org/ez-ctrl
165 verbose url raw ez-ctrl
166 verbose url resolving [ 'https://registry.npmjs.org/', './ez-ctrl' ]
167 verbose url resolved https://registry.npmjs.org/ez-ctrl
168 info trying registry request attempt 1 at 17:16:28
169 http GET https://registry.npmjs.org/ez-ctrl
170 http 200 https://registry.npmjs.org/ez-ctrl
171 error publish fail Cannot publish over existing version.
171 error publish fail Update the 'version' field in package.json and try again.
171 error publish fail
171 error publish fail If the previous version was published in error, see:
171 error publish fail     npm help unpublish
171 error publish fail
171 error publish fail To automatically increment version numbers, see:
171 error publish fail     npm help version
172 error System Linux 3.11.0-15-generic
173 error command "/usr/bin/node" "/usr/bin/npm" "publish"
174 error cwd /home/yourdeveloperfriend/www/ez-ctrl/ez-ctrl
175 error node -v v0.10.24
176 error npm -v 1.3.21
177 error code EPUBLISHCONFLICT
178 verbose exit [ 1, true ]
