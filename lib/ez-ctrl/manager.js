// Generated by CoffeeScript 1.7.1
(function() {
  var ControllerManager, Q, fs, _;

  _ = require('underscore');

  Q = require('q');

  fs = require('fs');

  module.exports = ControllerManager = (function() {
    function ControllerManager() {
      this.controllers = {};
    }

    ControllerManager.prototype.getAllRoutes = function() {
      return _.reduce(this.controllers, function(memo, controller) {
        if (controller.modelName) {
          memo[controller.modelName] = controller.getRoutes();
        }
        return memo;
      }, {});
    };

    ControllerManager.prototype.readdir = function(dirname) {
      return Q.nfcall(fs.readdir, dirname).then((function(_this) {
        return function(files) {
          _this.loadFiles(dirname, files, '.js');
          if (Object.keys(_this.controllers).length === 0) {
            return _this.loadFiles(dirname, files, '.coffee');
          }
        };
      })(this));
    };

    ControllerManager.prototype.loadFiles = function(dirname, files, ext) {
      var Controller, file, index, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        if (-1 !== (index = file.indexOf(ext)) && -1 === file.indexOf('.spec' + ext)) {
          file = file.substr(0, index);
          Controller = require(dirname + "/" + file);
          _results.push(this.addController(Controller));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    ControllerManager.prototype.registerRoutes = function(app) {
      var controller, _results;
      _results = [];
      for (controller in this.controllers) {
        _results.push(controller.registerRoutes(app));
      }
      return _results;
    };

    ControllerManager.prototype.addController = function(ctrl) {
      if (ctrl && ctrl.isController && !ctrl.isAbstract) {
        return this.controllers[ctrl.name] = ctrl;
      }
    };

    return ControllerManager;

  })();

}).call(this);
