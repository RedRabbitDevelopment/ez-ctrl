// Generated by CoffeeScript 1.6.3
(function() {
  var ControllerManager, unbindedGetAllRoutes, unbindedRegisterRoutes, _;

  _ = require('underscore');

  unbindedGetAllRoutes = function(controllers) {
    return _.reduce(this.controllers, function(memo, controller) {
      if (controller.modelName) {
        memo[controller.modelName] = controller.getRoutes();
      }
      return memo;
    }, {});
  };

  unbindedRegisterRoutes = function(app) {
    var controller, _i, _len, _ref, _results;
    _ref = this.controllers;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      controller = _ref[_i];
      _results.push(controller.registerRoutes(app));
    }
    return _results;
  };

  module.exports = ControllerManager = (function() {
    function ControllerManager() {
      this.controllers = [];
    }

    ControllerManager.prototype.getAllRoutes = unbindedGetAllRoutes;

    ControllerManager.prototype.readdir = function(dirname) {
      var _this = this;
      return Q.fninvoke(fs.readdir, dirname).then(function(files) {
        var file, index, _i, _len, _results;
        _results = [];
        for (_i = 0, _len = files.length; _i < _len; _i++) {
          file = files[_i];
          if (index = file.indexOf('.js')) {
            file = file.substr(0, index);
            _results.push(_this.controllers.push(require(file)));
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      });
    };

    ControllerManager.prototype.registerRoutes = unbindedRegisterRoutes;

    ControllerManager.controllers = [];

    ControllerManager.getAllRoutes = unbindedGetAllRoutes;

    ControllerManager.registerRoutes = unbindedRegisterRoutes;

    return ControllerManager;

  })();

}).call(this);
