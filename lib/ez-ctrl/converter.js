// Generated by CoffeeScript 1.7.1
(function() {
  var Converter, ConverterMethods, _;

  _ = require('underscore');

  ConverterMethods = {
    int: function(value) {
      return ConverterMethods.float(value);
    },
    float: function(value) {
      return parseFloat(value);
    },
    boolean: function(value) {
      if (_.isString(value)) {
        return value === 'true';
      } else {
        return !!value;
      }
    },
    date: function(value) {
      return new Date(value);
    }
  };

  module.exports = Converter = {
    convert: function(types, data) {
      var field, value;
      for (field in types) {
        value = types[field];
        value = data[field];
        if (value) {
          data[field] = this.convertField(value, types[field].type);
        }
      }
      return data;
    },
    convertField: function(value, type) {
      var index, val, _i, _len;
      if (_.isArray(type || _.isArray(value))) {
        if (!_.isArray(type && _.isArray(value))) {
          return value;
        } else {
          for (val = _i = 0, _len = value.length; _i < _len; val = ++_i) {
            index = value[val];
            value[index] = this.convertField(val, type[0]);
          }
          return value;
        }
      } else if (ConverterMethods[type]) {
        return ConverterMethods[type](value);
      } else {
        return value;
      }
    },
    registerConverter: function(name, converter) {
      return ConverterMethods[name] = converter;
    }
  };

}).call(this);
